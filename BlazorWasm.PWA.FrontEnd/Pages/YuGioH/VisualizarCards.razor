@page "/visualizar-cartas"
@layout BlankLayout
<h3>VisualizarPokemon</h3>
<h3>VisualizarPokemon</h3>
@if (cardAtual != null)
    <p>Id: @cardAtual.Id</p>
    <br>
    <p>Nome: @cardAtual.Nome</p>
    <br>
    <img src="@cardAtual.ImgUrl" style="width:200px" />
    <br>
    <p>Tipo: @cardAtual.Tipo</p>
    <br>
    <p>Golpe Principal: @cardAtual.DEF</p>
    @if (idAtual < idMax)
    {
        <button @onclick=IrParaProximo> Proximo </button>
    }

    }
    <br>
        @if (idAtual < idMax)
        {
            <button @onclick=IrParaProximo> Proximo </button>



    </div>

    <TemplateCard Card=@cardAtual />


    @if (idAtual > 1)
    {
        <button @onclick=IrParaAnterior> Anterior</button>
    }

    @if (idAtual < idMax)
    {
        <button @onclick=IrParaProximo> Proximo </button>
    }

        Console.WriteLine("Requisitando carta: " + idAtual);
else
{
    <h2>Carregando</h2>
}
</div>

@code {
    YuGioH? cardAtual = null;
    private int idAtual = 1;
    private int idMax;

    protected async override Task OnInitializedAsync()
    {
        cardAtual = await yugiRepo.Get(idAtual);
        idMax = (await yugiRepo.Get()).Count;
    }

    public async void IrParaAnterior()
    {
        idAtual--;
        Console.WriteLine("Requisitando carta: " + idAtual);
        cardAtual = null;
        cardAtual = await yugiRepo.Get(idAtual);
        Console.WriteLine("Carta encontrada!");
        StateHasChanged();

    }

    public async void IrParaProximo()
    {
        idAtual++;
        Console.WriteLine("Requisitando Pokemon: " + idAtual);
        cardAtual = null;
        cardAtual = await yugiRepo.Get(idAtual);
        Console.WriteLine("Carta encontrada!");
        StateHasChanged();

    }


}
