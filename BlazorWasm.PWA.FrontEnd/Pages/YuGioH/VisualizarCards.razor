@page "/visualizar-cartas"
@inject IRepository<YuGioH> yugiRepo


<div class="justify-content-center" style="width: 100%; text-align: center;">
@if (cardAtual != null)
{

        <div class="d-inline-block btn-voltar">        
            <a class="btn btn-danger" href="/" role="button"> Voltar </a>
        </div>

    <div class="buttons" style="position: relative; z-index: 11;">
        @if (idAtual > 1)
        {
            <button type="button" class="btn btn-secondary" @onclick=IrParaAnterior> Anterior</button>
        }

        @if (idAtual < idMax)
        {
            <button type="button" class="btn btn-primary" @onclick=IrParaProximo> Proximo </button>
        }
    </div>

    <TemplateCard Card=@cardAtual />
    
}
else
{
    <h2>Carregando</h2>
}
</div>

@code {
    YuGioH? cardAtual = null;
    private int idAtual = 1;
    private int idMax;

    protected async override Task OnInitializedAsync()
    {
        cardAtual = await yugiRepo.Get(idAtual);
        idMax = (await yugiRepo.Get()).Count;
    }

    public async void IrParaAnterior()
    {
        idAtual--;
        Console.WriteLine("Requisitando carta: " + idAtual);
        cardAtual = null;
        cardAtual = await yugiRepo.Get(idAtual);
        Console.WriteLine("Carta encontrada!");
        StateHasChanged();

    }

    public async void IrParaProximo()
    {
        idAtual++;
        Console.WriteLine("Requisitando Cartas: " + idAtual);
        cardAtual = null;
        cardAtual = await yugiRepo.Get(idAtual);
        Console.WriteLine("Carta encontrada!");
        StateHasChanged();

    }


}
